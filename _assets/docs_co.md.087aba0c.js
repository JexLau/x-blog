import{g as n,j as s,l as a,f as t,q as o}from"./common-bec3f312.js";const e='{"title":"纪年 |【第四期】浅析 co 源码","frontmatter":{"date":"2021-09-02","title":"纪年 |【第四期】浅析 co 源码","tags":["源码","Promise"],"describe":"浅析 co 源码"},"headers":[{"level":2,"title":"1. 前言","slug":"_1-前言"},{"level":2,"title":"2. 简单了解 co","slug":"_2-简单了解-co"},{"level":3,"title":"2.1 关于 generator","slug":"_2-1-关于-generator"},{"level":2,"title":"3. 学习目标","slug":"_3-学习目标"},{"level":2,"title":"4. 解读 co 源码","slug":"_4-解读-co-源码"},{"level":3,"title":"4.1 整体架构","slug":"_4-1-整体架构"},{"level":3,"title":"4.2 分析 next 函数","slug":"_4-2-分析-next-函数"},{"level":2,"title":"5. 实践","slug":"_5-实践"},{"level":3,"title":"5.1 模拟请求","slug":"_5-1-模拟请求"},{"level":3,"title":"5.2 模拟实现简版 co","slug":"_5-2-模拟实现简版-co"},{"level":2,"title":"6. 感想","slug":"_6-感想"}],"relativePath":"docs/co.md","lastUpdated":1633572538330.0195}';var c={};const p=s("blockquote",null,[s("p",null,[a("【若川】浅析 koa 洋葱模型和 co 原理："),s("a",{href:"https://juejin.cn/post/6844904088220467213",target:"_blank",rel:"noopener noreferrer"},"https://juejin.cn/post/6844904088220467213")]),s("p",null,[a("【明海Zzzz】co 源码解析："),s("a",{href:"https://juejin.cn/post/6844903472362422286",target:"_blank",rel:"noopener noreferrer"},"https://juejin.cn/post/6844903472362422286")]),s("p",null,[a("【骁】 co 库源码："),s("a",{href:"https://www.yuque.com/ruochuan12/dxsvhs/pgzu2c",target:"_blank",rel:"noopener noreferrer"},"https://www.yuque.com/ruochuan12/dxsvhs/pgzu2c")])],-1),u=s("h2",{id:"_1-前言"},[s("a",{class:"header-anchor",href:"#_1-前言","aria-hidden":"true"},"#"),a(" 1. 前言")],-1),l=s("p",null,"这周看的是 co 的源码，我对 co 比较陌生，没有了解和使用过。因此在看源码之前，我希望能大概了解 co 是什么，解决了什么问题。",-1),k=s("h2",{id:"_2-简单了解-co"},[s("a",{class:"header-anchor",href:"#_2-简单了解-co","aria-hidden":"true"},"#"),a(" 2. 简单了解 co")],-1),i=s("p",null,[a("先看了 co 的 "),s("a",{href:"https://github.com/tj/co",target:"_blank",rel:"noopener noreferrer"},"GitHub"),a("，README 是这样介绍的：")],-1),r=s("blockquote",null,[s("p",null,"Generator based control flow goodness for nodejs and the browser, using promises, letting you write non-blocking code in a nice-ish way.")],-1),d=s("p",null,"看起来有点懵逼，又查了一些资料，大多说 co 是用于 generator 函数的自动执行。generator 是 ES6 提供的一种异步编程解决方案，它最大的特点是可以控制函数的执行。",-1),f=s("h3",{id:"_2-1-关于-generator"},[s("a",{class:"header-anchor",href:"#_2-1-关于-generator","aria-hidden":"true"},"#"),a(" 2.1 关于 generator")],-1),m=s("p",null,"说到异步编程，我们很容易想到还有 promise，async 和 await。它们有什么区别呢？先看看 JS 异步编程进化史：callback -> promise -> generator -> async + await",-1),y=s("p",null,[s("img",{src:"/blog/_assets/co0.28e8c460.png",alt:"JS 异步编程"})],-1),w=s("p",null,"再看看它们语法上的差异：",-1),g=s("table",null,[s("thead",null,[s("tr",null,[s("th",null,"Callback"),s("th",null,"Promise"),s("th",null,"Generator"),s("th",null,"async + await + Promise")])]),s("tbody",null,[s("tr",null,[s("td",null,"ajax(url, () => {})"),s("td",null,"Promise((resolve,reject) => { resolve() }).then()"),s("td",null,"function* gen() { yield 1}"),s("td",null,"async getData() { await fetchData() }")])])],-1),h=s("blockquote",null,[s("p",null,"关于 generator 的学习不在此篇幅详写了，需要了解它的概念和语法。")],-1),v=s("h2",{id:"_3-学习目标"},[s("a",{class:"header-anchor",href:"#_3-学习目标","aria-hidden":"true"},"#"),a(" 3. 学习目标")],-1),j=s("p",null,"经过简单学习，大概明白了 co 产生的背景，因为 generator 函数不会自动执行，需要手动调用它的 next() 函数，co 的作用就是自动执行 generator 的 next() 函数，直到 done 的状态变成 true 为止。",-1),b=s("p",null,"那么我这一期的学习目标：",-1),P=s("p",null,"1）解读 co 源码，理解它是如何实现自动执行 generator",-1),_=s("p",null,"2）动手实现一个简略版的 co",-1),x=s("h2",{id:"_4-解读-co-源码"},[s("a",{class:"header-anchor",href:"#_4-解读-co-源码","aria-hidden":"true"},"#"),a(" 4. 解读 co 源码")],-1),q=s("p",null,[a("co 源码地址："),s("a",{href:"https://github.com/tj/co",target:"_blank",rel:"noopener noreferrer"},"https://github.com/tj/co")],-1),D=s("h3",{id:"_4-1-整体架构"},[s("a",{class:"header-anchor",href:"#_4-1-整体架构","aria-hidden":"true"},"#"),a(" 4.1 整体架构")],-1),R=s("p",null,"从 README 中，可以看到是如何使用 co ：",-1),F=s("div",{class:"language-javascript"},[s("pre",null,[s("code",null,[s("span",{class:"token function"},"co"),s("span",{class:"token punctuation"},"("),s("span",{class:"token keyword"},"function"),s("span",{class:"token operator"},"*"),a(),s("span",{class:"token punctuation"},"("),s("span",{class:"token punctuation"},")"),a(),s("span",{class:"token punctuation"},"{"),a("\n  "),s("span",{class:"token keyword"},"var"),a(" result "),s("span",{class:"token operator"},"="),a(),s("span",{class:"token keyword"},"yield"),a(" Promise"),s("span",{class:"token punctuation"},"."),s("span",{class:"token function"},"resolve"),s("span",{class:"token punctuation"},"("),s("span",{class:"token boolean"},"true"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},";"),a("\n  "),s("span",{class:"token keyword"},"return"),a(" result"),s("span",{class:"token punctuation"},";"),a("\n"),s("span",{class:"token punctuation"},"}"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},"."),s("span",{class:"token function"},"then"),s("span",{class:"token punctuation"},"("),s("span",{class:"token keyword"},"function"),a(),s("span",{class:"token punctuation"},"("),s("span",{class:"token parameter"},"value"),s("span",{class:"token punctuation"},")"),a(),s("span",{class:"token punctuation"},"{"),a("\n  console"),s("span",{class:"token punctuation"},"."),s("span",{class:"token function"},"log"),s("span",{class:"token punctuation"},"("),a("value"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},";"),a("\n"),s("span",{class:"token punctuation"},"}"),s("span",{class:"token punctuation"},","),a(),s("span",{class:"token keyword"},"function"),a(),s("span",{class:"token punctuation"},"("),s("span",{class:"token parameter"},"err"),s("span",{class:"token punctuation"},")"),a(),s("span",{class:"token punctuation"},"{"),a("\n  console"),s("span",{class:"token punctuation"},"."),s("span",{class:"token function"},"error"),s("span",{class:"token punctuation"},"("),a("err"),s("span",{class:"token punctuation"},"."),a("stack"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},";"),a("\n"),s("span",{class:"token punctuation"},"}"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},";"),a("\n")])])],-1),E=s("p",null,"从代码可以看到它接收了一个 generator 函数，返回了一个 Promise，这部分对应的源码如下。",-1),T=s("div",{class:"language-javascript"},[s("pre",null,[s("code",null,[s("span",{class:"token keyword"},"function"),a(),s("span",{class:"token function"},"co"),s("span",{class:"token punctuation"},"("),s("span",{class:"token parameter"},"gen"),s("span",{class:"token punctuation"},")"),a(),s("span",{class:"token punctuation"},"{"),a("\n  "),s("span",{class:"token keyword"},"var"),a(" ctx "),s("span",{class:"token operator"},"="),a(),s("span",{class:"token keyword"},"this"),s("span",{class:"token punctuation"},";"),a("\n  "),s("span",{class:"token comment"},"// 获取参数"),a("\n  "),s("span",{class:"token keyword"},"var"),a(" args "),s("span",{class:"token operator"},"="),a(),s("span",{class:"token function"},"slice"),s("span",{class:"token punctuation"},"."),s("span",{class:"token function"},"call"),s("span",{class:"token punctuation"},"("),a("arguments"),s("span",{class:"token punctuation"},","),a(),s("span",{class:"token number"},"1"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},";"),a("\n  "),s("span",{class:"token comment"},"// 返回一个 Promise"),a("\n  "),s("span",{class:"token keyword"},"return"),a(),s("span",{class:"token keyword"},"new"),a(),s("span",{class:"token class-name"},"Promise"),s("span",{class:"token punctuation"},"("),s("span",{class:"token keyword"},"function"),s("span",{class:"token punctuation"},"("),s("span",{class:"token parameter"},[a("resolve"),s("span",{class:"token punctuation"},","),a(" reject")]),s("span",{class:"token punctuation"},")"),a(),s("span",{class:"token punctuation"},"{"),a("\n    "),s("span",{class:"token comment"},"// 把 ctx 和参数传递给 gen 函数"),a("\n    "),s("span",{class:"token keyword"},"if"),a(),s("span",{class:"token punctuation"},"("),s("span",{class:"token keyword"},"typeof"),a(" gen "),s("span",{class:"token operator"},"==="),a(),s("span",{class:"token string"},"'function'"),s("span",{class:"token punctuation"},")"),a(" gen "),s("span",{class:"token operator"},"="),a(),s("span",{class:"token function"},"gen"),s("span",{class:"token punctuation"},"."),s("span",{class:"token function"},"apply"),s("span",{class:"token punctuation"},"("),a("ctx"),s("span",{class:"token punctuation"},","),a(" args"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},";"),a("\n    "),s("span",{class:"token comment"},"// 判断 gen.next 是否函数，如果不是直接 resolve(gen)"),a("\n    "),s("span",{class:"token keyword"},"if"),a(),s("span",{class:"token punctuation"},"("),s("span",{class:"token operator"},"!"),a("gen "),s("span",{class:"token operator"},"||"),a(),s("span",{class:"token keyword"},"typeof"),a(" gen"),s("span",{class:"token punctuation"},"."),a("next "),s("span",{class:"token operator"},"!=="),a(),s("span",{class:"token string"},"'function'"),s("span",{class:"token punctuation"},")"),a(),s("span",{class:"token keyword"},"return"),a(),s("span",{class:"token function"},"resolve"),s("span",{class:"token punctuation"},"("),a("gen"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},";"),a("\n    "),s("span",{class:"token comment"},"// 先执行一次 next"),a("\n    "),s("span",{class:"token function"},"onFulfilled"),s("span",{class:"token punctuation"},"("),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},";"),a("\n    "),s("span",{class:"token comment"},"// 实际上就是执行 gen.next 函数，获取 gen 的值"),a("\n    "),s("span",{class:"token keyword"},"function"),a(),s("span",{class:"token function"},"onFulfilled"),s("span",{class:"token punctuation"},"("),s("span",{class:"token parameter"},"res"),s("span",{class:"token punctuation"},")"),a(),s("span",{class:"token punctuation"},"{"),a("\n      "),s("span",{class:"token keyword"},"var"),a(" ret"),s("span",{class:"token punctuation"},";"),a("\n      "),s("span",{class:"token keyword"},"try"),a(),s("span",{class:"token punctuation"},"{"),a("\n        ret "),s("span",{class:"token operator"},"="),a(" gen"),s("span",{class:"token punctuation"},"."),s("span",{class:"token function"},"next"),s("span",{class:"token punctuation"},"("),a("res"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},";"),a("\n      "),s("span",{class:"token punctuation"},"}"),a(),s("span",{class:"token keyword"},"catch"),a(),s("span",{class:"token punctuation"},"("),a("e"),s("span",{class:"token punctuation"},")"),a(),s("span",{class:"token punctuation"},"{"),a("\n        "),s("span",{class:"token keyword"},"return"),a(),s("span",{class:"token function"},"reject"),s("span",{class:"token punctuation"},"("),a("e"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},";"),a("\n      "),s("span",{class:"token punctuation"},"}"),a("\n      "),s("span",{class:"token function"},"next"),s("span",{class:"token punctuation"},"("),a("ret"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},";"),a("\n      "),s("span",{class:"token keyword"},"return"),a(),s("span",{class:"token keyword"},"null"),s("span",{class:"token punctuation"},";"),a("\n    "),s("span",{class:"token punctuation"},"}"),a("\n    "),s("span",{class:"token comment"},"// 对 gen.throw 的处理"),a("\n    "),s("span",{class:"token keyword"},"function"),a(),s("span",{class:"token function"},"onRejected"),s("span",{class:"token punctuation"},"("),s("span",{class:"token parameter"},"err"),s("span",{class:"token punctuation"},")"),a(),s("span",{class:"token punctuation"},"{"),a("\n      "),s("span",{class:"token keyword"},"var"),a(" ret"),s("span",{class:"token punctuation"},";"),a("\n      "),s("span",{class:"token keyword"},"try"),a(),s("span",{class:"token punctuation"},"{"),a("\n        ret "),s("span",{class:"token operator"},"="),a(" gen"),s("span",{class:"token punctuation"},"."),s("span",{class:"token function"},"throw"),s("span",{class:"token punctuation"},"("),a("err"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},";"),a("\n      "),s("span",{class:"token punctuation"},"}"),a(),s("span",{class:"token keyword"},"catch"),a(),s("span",{class:"token punctuation"},"("),a("e"),s("span",{class:"token punctuation"},")"),a(),s("span",{class:"token punctuation"},"{"),a("\n        "),s("span",{class:"token keyword"},"return"),a(),s("span",{class:"token function"},"reject"),s("span",{class:"token punctuation"},"("),a("e"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},";"),a("\n      "),s("span",{class:"token punctuation"},"}"),a("\n      "),s("span",{class:"token function"},"next"),s("span",{class:"token punctuation"},"("),a("ret"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},";"),a("\n    "),s("span",{class:"token punctuation"},"}"),a("\n    "),s("span",{class:"token comment"},"// 实际处理的函数，会递归执行，直到 ret.done 状态为 true"),a("\n    "),s("span",{class:"token keyword"},"function"),a(),s("span",{class:"token function"},"next"),s("span",{class:"token punctuation"},"("),s("span",{class:"token parameter"},"ret"),s("span",{class:"token punctuation"},")"),a(),s("span",{class:"token punctuation"},"{"),a("\n      "),s("span",{class:"token comment"},"// 如果生成器的状态 done 为 true，就 resolve(ret.value)，返回结果"),a("\n      "),s("span",{class:"token keyword"},"if"),a(),s("span",{class:"token punctuation"},"("),a("ret"),s("span",{class:"token punctuation"},"."),a("done"),s("span",{class:"token punctuation"},")"),a(),s("span",{class:"token keyword"},"return"),a(),s("span",{class:"token function"},"resolve"),s("span",{class:"token punctuation"},"("),a("ret"),s("span",{class:"token punctuation"},"."),a("value"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},";"),a("\n      "),s("span",{class:"token comment"},"// 否则，将 gen 的结果 value 封装成 Promise"),a("\n      "),s("span",{class:"token keyword"},"var"),a(" value "),s("span",{class:"token operator"},"="),a(),s("span",{class:"token function"},"toPromise"),s("span",{class:"token punctuation"},"."),s("span",{class:"token function"},"call"),s("span",{class:"token punctuation"},"("),a("ctx"),s("span",{class:"token punctuation"},","),a(" ret"),s("span",{class:"token punctuation"},"."),a("value"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},";"),a("\n      "),s("span",{class:"token comment"},"// 判断 value 是否 Promise，如果是就返回 then"),a("\n      "),s("span",{class:"token keyword"},"if"),a(),s("span",{class:"token punctuation"},"("),a("value "),s("span",{class:"token operator"},"&&"),a(),s("span",{class:"token function"},"isPromise"),s("span",{class:"token punctuation"},"("),a("value"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},")"),a(),s("span",{class:"token keyword"},"return"),a(" value"),s("span",{class:"token punctuation"},"."),s("span",{class:"token function"},"then"),s("span",{class:"token punctuation"},"("),a("onFulfilled"),s("span",{class:"token punctuation"},","),a(" onRejected"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},";"),a("\n      "),s("span",{class:"token comment"},"// 如果不是 Promise，Rejected"),a("\n      "),s("span",{class:"token keyword"},"return"),a(),s("span",{class:"token function"},"onRejected"),s("span",{class:"token punctuation"},"("),s("span",{class:"token keyword"},"new"),a(),s("span",{class:"token class-name"},"TypeError"),s("span",{class:"token punctuation"},"("),s("span",{class:"token string"},"'You may only yield a function, promise, generator, array, or object, '"),a("\n        "),s("span",{class:"token operator"},"+"),a(),s("span",{class:"token string"},"'but the following object was passed: \"'"),a(),s("span",{class:"token operator"},"+"),a(),s("span",{class:"token function"},"String"),s("span",{class:"token punctuation"},"("),a("ret"),s("span",{class:"token punctuation"},"."),a("value"),s("span",{class:"token punctuation"},")"),a(),s("span",{class:"token operator"},"+"),a(),s("span",{class:"token string"},"'\"'"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},";"),a("\n    "),s("span",{class:"token punctuation"},"}"),a("\n  "),s("span",{class:"token punctuation"},"}"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},";"),a("\n"),s("span",{class:"token punctuation"},"}"),a("\n")])])],-1),z=s("p",null,[a("看到这里，我产生了一个疑问：Promise + then 也可以处理异步编程，为什么 co 的源码里要把 Promise + generator 结合起来呢，为什么要这样做？直到我搞懂了 co 的核心目的，它使 generator 和 yield 的语法更趋向于同步编程的写法，引用"),s("a",{href:"https://www.ruanyifeng.com/blog/2015/04/generator.html",target:"_blank",rel:"noopener noreferrer"},"阮一峰的网络日志"),a("中的一句话就是：")],-1),A=s("blockquote",null,[s("p",null,"异步编程的语法目标，就是怎样让它更像同步编程。")],-1),G=s("p",null,"可以看一个 Promise + then 的例子：",-1),S=s("div",{class:"language-javascript"},[s("pre",null,[s("code",null,[s("span",{class:"token keyword"},"function"),a(),s("span",{class:"token function"},"getData"),s("span",{class:"token punctuation"},"("),s("span",{class:"token punctuation"},")"),a(),s("span",{class:"token punctuation"},"{"),a("\n  "),s("span",{class:"token keyword"},"return"),a(),s("span",{class:"token keyword"},"new"),a(),s("span",{class:"token class-name"},"Promise"),s("span",{class:"token punctuation"},"("),s("span",{class:"token keyword"},"function"),s("span",{class:"token punctuation"},"("),s("span",{class:"token parameter"},[a("resolve"),s("span",{class:"token punctuation"},","),a(" reject")]),s("span",{class:"token punctuation"},")"),a(),s("span",{class:"token punctuation"},"{"),a("\n    "),s("span",{class:"token function"},"resolve"),s("span",{class:"token punctuation"},"("),s("span",{class:"token number"},"1111"),s("span",{class:"token punctuation"},")"),a("\n  "),s("span",{class:"token punctuation"},"}"),s("span",{class:"token punctuation"},")"),a("\n"),s("span",{class:"token punctuation"},"}"),a("\n"),s("span",{class:"token function"},"getData"),s("span",{class:"token punctuation"},"("),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},"."),s("span",{class:"token function"},"then"),s("span",{class:"token punctuation"},"("),s("span",{class:"token keyword"},"function"),s("span",{class:"token punctuation"},"("),s("span",{class:"token parameter"},"res"),s("span",{class:"token punctuation"},")"),a(),s("span",{class:"token punctuation"},"{"),a("\n  "),s("span",{class:"token comment"},"// 处理第一个异步的结果"),a("\n  console"),s("span",{class:"token punctuation"},"."),s("span",{class:"token function"},"log"),s("span",{class:"token punctuation"},"("),a("res"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},";"),a("\n  "),s("span",{class:"token comment"},"// 返回第二个异步"),a("\n  "),s("span",{class:"token keyword"},"return"),a(" Promise"),s("span",{class:"token punctuation"},"."),s("span",{class:"token function"},"resolve"),s("span",{class:"token punctuation"},"("),s("span",{class:"token number"},"2222"),s("span",{class:"token punctuation"},")"),a("\n"),s("span",{class:"token punctuation"},"}"),s("span",{class:"token punctuation"},")"),a("\n"),s("span",{class:"token punctuation"},"."),s("span",{class:"token function"},"then"),s("span",{class:"token punctuation"},"("),s("span",{class:"token keyword"},"function"),s("span",{class:"token punctuation"},"("),s("span",{class:"token parameter"},"res"),s("span",{class:"token punctuation"},")"),a(),s("span",{class:"token punctuation"},"{"),a("\n  "),s("span",{class:"token comment"},"// 处理第二个异步的结果"),a("\n  console"),s("span",{class:"token punctuation"},"."),s("span",{class:"token function"},"log"),s("span",{class:"token punctuation"},"("),a("res"),s("span",{class:"token punctuation"},")"),a("\n"),s("span",{class:"token punctuation"},"}"),s("span",{class:"token punctuation"},")"),a("\n"),s("span",{class:"token punctuation"},"."),s("span",{class:"token function"},"catch"),s("span",{class:"token punctuation"},"("),s("span",{class:"token keyword"},"function"),s("span",{class:"token punctuation"},"("),s("span",{class:"token parameter"},"err"),s("span",{class:"token punctuation"},")"),a(),s("span",{class:"token punctuation"},"{"),a("\n  console"),s("span",{class:"token punctuation"},"."),s("span",{class:"token function"},"error"),s("span",{class:"token punctuation"},"("),a("err"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},";"),a("\n"),s("span",{class:"token punctuation"},"}"),s("span",{class:"token punctuation"},")"),a("\n")])])],-1),C=s("p",null,[a("如果有多个异步处理就会需要写多少个 then 来处理异步之间可能存在的同步关系，从以上的代码可以看到 then 的处理是一层一层的嵌套。如果换成 co，在写法上更优雅也"),s("strong",null,"更符合日常同步编程"),a("的写法：")],-1),J=s("div",{class:"language-javascript"},[s("pre",null,[s("code",null,[s("span",{class:"token function"},"co"),s("span",{class:"token punctuation"},"("),s("span",{class:"token keyword"},"function"),s("span",{class:"token operator"},"*"),a(),s("span",{class:"token punctuation"},"("),s("span",{class:"token punctuation"},")"),a(),s("span",{class:"token punctuation"},"{"),a("\n  "),s("span",{class:"token keyword"},"try"),a(),s("span",{class:"token punctuation"},"{"),a("\n    "),s("span",{class:"token keyword"},"var"),a(" result1 "),s("span",{class:"token operator"},"="),a(),s("span",{class:"token keyword"},"yield"),a(" Promise"),s("span",{class:"token punctuation"},"."),s("span",{class:"token function"},"resolve"),s("span",{class:"token punctuation"},"("),s("span",{class:"token number"},"1111"),s("span",{class:"token punctuation"},")"),a("\n    "),s("span",{class:"token comment"},"// 处理第一个异步的结果"),a("\n    console"),s("span",{class:"token punctuation"},"."),s("span",{class:"token function"},"log"),s("span",{class:"token punctuation"},"("),a("result1"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},";"),a("\n    "),s("span",{class:"token comment"},"// 返回第二个异步"),a("\n    "),s("span",{class:"token keyword"},"var"),a(" result2 "),s("span",{class:"token operator"},"="),a(),s("span",{class:"token keyword"},"yield"),a(" Promise"),s("span",{class:"token punctuation"},"."),s("span",{class:"token function"},"resolve"),s("span",{class:"token punctuation"},"("),s("span",{class:"token number"},"2222"),s("span",{class:"token punctuation"},")"),a("\n    "),s("span",{class:"token comment"},"// 处理第二个异步的结果"),a("\n    console"),s("span",{class:"token punctuation"},"."),s("span",{class:"token function"},"log"),s("span",{class:"token punctuation"},"("),a("result2"),s("span",{class:"token punctuation"},")"),a("\n  "),s("span",{class:"token punctuation"},"}"),a(),s("span",{class:"token keyword"},"catch"),a(),s("span",{class:"token punctuation"},"("),a("err"),s("span",{class:"token punctuation"},")"),a(),s("span",{class:"token punctuation"},"{"),a("\n    console"),s("span",{class:"token punctuation"},"."),s("span",{class:"token function"},"error"),s("span",{class:"token punctuation"},"("),a("err"),s("span",{class:"token punctuation"},")"),a("\n  "),s("span",{class:"token punctuation"},"}"),a("\n"),s("span",{class:"token punctuation"},"}"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},";"),a("\n")])])],-1),M=s("h3",{id:"_4-2-分析-next-函数"},[s("a",{class:"header-anchor",href:"#_4-2-分析-next-函数","aria-hidden":"true"},"#"),a(" 4.2 分析 next 函数")],-1),H=s("p",null,[a("源码的 next 函数接收一个 gen.next() 返回的对象 ret 作为参数，形如"),s("code",null,"{value: T, done: boolean}"),a("，next 函数只有四行代码。")],-1),O=s("p",null,[a("第一行："),s("code",null,"if (ret.done) return resolve(ret.value);"),a(" 如果 ret.done 为 true，表明 gen 函数到了结束状态，就 resolve(ret.value)，返回结果。")],-1),U=s("p",null,[a("第二行："),s("code",null,"var value = toPromise.call(ctx, ret.value);"),a(" 调用 toPromise.call(ctx, ret.value) 函数，toPromise 函数的作用是把 ret.value 转化成 Promise 类型，也就是用 Promise 包裹一层再 return 出去。")],-1),Y=s("div",{class:"language-javascript"},[s("pre",null,[s("code",null,[s("span",{class:"token keyword"},"function"),a(),s("span",{class:"token function"},"toPromise"),s("span",{class:"token punctuation"},"("),s("span",{class:"token parameter"},"obj"),s("span",{class:"token punctuation"},")"),a(),s("span",{class:"token punctuation"},"{"),a("\n  "),s("span",{class:"token comment"},"// 如果 obj 不存在，直接返回 obj"),a("\n  "),s("span",{class:"token keyword"},"if"),a(),s("span",{class:"token punctuation"},"("),s("span",{class:"token operator"},"!"),a("obj"),s("span",{class:"token punctuation"},")"),a(),s("span",{class:"token keyword"},"return"),a(" obj"),s("span",{class:"token punctuation"},";"),a("\n  "),s("span",{class:"token comment"},"// 如果 obj 是 Promise 类型，直接返回 obj"),a("\n  "),s("span",{class:"token keyword"},"if"),a(),s("span",{class:"token punctuation"},"("),s("span",{class:"token function"},"isPromise"),s("span",{class:"token punctuation"},"("),a("obj"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},")"),a(),s("span",{class:"token keyword"},"return"),a(" obj"),s("span",{class:"token punctuation"},";"),a("\n  "),s("span",{class:"token comment"},"// 如果 obj 是生成器函数或遍历器对象, 就递归调用 co 函数"),a("\n  "),s("span",{class:"token keyword"},"if"),a(),s("span",{class:"token punctuation"},"("),s("span",{class:"token function"},"isGeneratorFunction"),s("span",{class:"token punctuation"},"("),a("obj"),s("span",{class:"token punctuation"},")"),a(),s("span",{class:"token operator"},"||"),a(),s("span",{class:"token function"},"isGenerator"),s("span",{class:"token punctuation"},"("),a("obj"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},")"),a(),s("span",{class:"token keyword"},"return"),a(),s("span",{class:"token function"},"co"),s("span",{class:"token punctuation"},"."),s("span",{class:"token function"},"call"),s("span",{class:"token punctuation"},"("),s("span",{class:"token keyword"},"this"),s("span",{class:"token punctuation"},","),a(" obj"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},";"),a("\n  "),s("span",{class:"token comment"},"// 如果 obj 是普通的函数类型，转换成 Promise 类型函数再返回"),a("\n  "),s("span",{class:"token keyword"},"if"),a(),s("span",{class:"token punctuation"},"("),s("span",{class:"token string"},"'function'"),a(),s("span",{class:"token operator"},"=="),a(),s("span",{class:"token keyword"},"typeof"),a(" obj"),s("span",{class:"token punctuation"},")"),a(),s("span",{class:"token keyword"},"return"),a(),s("span",{class:"token function"},"thunkToPromise"),s("span",{class:"token punctuation"},"."),s("span",{class:"token function"},"call"),s("span",{class:"token punctuation"},"("),s("span",{class:"token keyword"},"this"),s("span",{class:"token punctuation"},","),a(" obj"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},";"),a("\n  "),s("span",{class:"token comment"},"// 如果 obj 是一个数组, 转换成 Promise 数组再返回"),a("\n  "),s("span",{class:"token keyword"},"if"),a(),s("span",{class:"token punctuation"},"("),a("Array"),s("span",{class:"token punctuation"},"."),s("span",{class:"token function"},"isArray"),s("span",{class:"token punctuation"},"("),a("obj"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},")"),a(),s("span",{class:"token keyword"},"return"),a(),s("span",{class:"token function"},"arrayToPromise"),s("span",{class:"token punctuation"},"."),s("span",{class:"token function"},"call"),s("span",{class:"token punctuation"},"("),s("span",{class:"token keyword"},"this"),s("span",{class:"token punctuation"},","),a(" obj"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},";"),a("\n  "),s("span",{class:"token comment"},"// 如果 obj 是一个对象, 转换成 Promise 对象再返回"),a("\n  "),s("span",{class:"token keyword"},"if"),a(),s("span",{class:"token punctuation"},"("),s("span",{class:"token function"},"isObject"),s("span",{class:"token punctuation"},"("),a("obj"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},")"),a(),s("span",{class:"token keyword"},"return"),a(),s("span",{class:"token function"},"objectToPromise"),s("span",{class:"token punctuation"},"."),s("span",{class:"token function"},"call"),s("span",{class:"token punctuation"},"("),s("span",{class:"token keyword"},"this"),s("span",{class:"token punctuation"},","),a(" obj"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},";"),a("\n  "),s("span",{class:"token comment"},"// 其他情况直接返回"),a("\n  "),s("span",{class:"token keyword"},"return"),a(" obj"),s("span",{class:"token punctuation"},";"),a("\n"),s("span",{class:"token punctuation"},"}"),a("\n")])])],-1),Z=s("p",null,[a("第三行："),s("code",null,"if (value && isPromise(value)) return value.then(onFulfilled, onRejected);"),a(" 如果 value 是 Promise 类型，调用 onFulfilled 或 onRejected，实际上是递归调用了 next 函数本身，直到 done 状态为 true 或 throw error。")],-1),B=s("p",null,[a("第四行："),s("code",null,"return onRejected(...)"),a(" 如果不是 Promise，直接 Rejected。")],-1),I=s("h2",{id:"_5-实践"},[s("a",{class:"header-anchor",href:"#_5-实践","aria-hidden":"true"},"#"),a(" 5. 实践")],-1),K=s("p",null,"虽然解读了 co 的核心代码，看起来像是懂了，实际上很容易遗忘。为了加深理解，结合上面的 co 源码和自己的思路动手实现一个简略版的 co。",-1),L=s("h3",{id:"_5-1-模拟请求"},[s("a",{class:"header-anchor",href:"#_5-1-模拟请求","aria-hidden":"true"},"#"),a(" 5.1 模拟请求")],-1),N=s("div",{class:"language-javascript"},[s("pre",null,[s("code",null,[s("span",{class:"token keyword"},"function"),a(),s("span",{class:"token function"},"request"),s("span",{class:"token punctuation"},"("),s("span",{class:"token punctuation"},")"),a(),s("span",{class:"token punctuation"},"{"),a("\n  "),s("span",{class:"token keyword"},"return"),a(),s("span",{class:"token keyword"},"new"),a(),s("span",{class:"token class-name"},"Promise"),s("span",{class:"token punctuation"},"("),s("span",{class:"token punctuation"},"("),s("span",{class:"token parameter"},"resolve"),s("span",{class:"token punctuation"},")"),a(),s("span",{class:"token operator"},"=>"),a(),s("span",{class:"token punctuation"},"{"),a("\n    "),s("span",{class:"token function"},"setTimeout"),s("span",{class:"token punctuation"},"("),s("span",{class:"token punctuation"},"("),s("span",{class:"token punctuation"},")"),a(),s("span",{class:"token operator"},"=>"),a(),s("span",{class:"token punctuation"},"{"),a("\n      "),s("span",{class:"token function"},"resolve"),s("span",{class:"token punctuation"},"("),s("span",{class:"token punctuation"},"{"),a("data"),s("span",{class:"token operator"},":"),a(),s("span",{class:"token string"},"'request'"),s("span",{class:"token punctuation"},"}"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},";"),a("\n    "),s("span",{class:"token punctuation"},"}"),s("span",{class:"token punctuation"},","),a(),s("span",{class:"token number"},"1000"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},";"),a("\n  "),s("span",{class:"token punctuation"},"}"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},";"),a("\n"),s("span",{class:"token punctuation"},"}"),a("\n"),s("span",{class:"token comment"},"// 用 yield 获取 request 的值"),a("\n"),s("span",{class:"token keyword"},"function"),s("span",{class:"token operator"},"*"),a(),s("span",{class:"token function"},"getData"),s("span",{class:"token punctuation"},"("),s("span",{class:"token punctuation"},")"),a(),s("span",{class:"token punctuation"},"{"),a("\n  "),s("span",{class:"token keyword"},"yield"),a(),s("span",{class:"token function"},"request"),s("span",{class:"token punctuation"},"("),s("span",{class:"token punctuation"},")"),a("\n"),s("span",{class:"token punctuation"},"}"),a("\n"),s("span",{class:"token keyword"},"var"),a(" g "),s("span",{class:"token operator"},"="),a(),s("span",{class:"token function"},"getData"),s("span",{class:"token punctuation"},"("),s("span",{class:"token punctuation"},")"),a("\n"),s("span",{class:"token keyword"},"var"),a(),s("span",{class:"token punctuation"},"{"),a("value"),s("span",{class:"token punctuation"},","),a(" done"),s("span",{class:"token punctuation"},"}"),a(),s("span",{class:"token operator"},"="),a(" g"),s("span",{class:"token punctuation"},"."),s("span",{class:"token function"},"next"),s("span",{class:"token punctuation"},"("),s("span",{class:"token punctuation"},")"),a("\n"),s("span",{class:"token comment"},'// 间隔1s后打印 {data: "request"}'),a("\nvalue"),s("span",{class:"token punctuation"},"."),s("span",{class:"token function"},"then"),s("span",{class:"token punctuation"},"("),s("span",{class:"token parameter"},"res"),a(),s("span",{class:"token operator"},"=>"),a(" console"),s("span",{class:"token punctuation"},"."),s("span",{class:"token function"},"log"),s("span",{class:"token punctuation"},"("),a("res"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},")"),a("\n")])])],-1),Q=s("h3",{id:"_5-2-模拟实现简版-co"},[s("a",{class:"header-anchor",href:"#_5-2-模拟实现简版-co","aria-hidden":"true"},"#"),a(" 5.2 模拟实现简版 co")],-1),V=s("p",null,"核心实现：",-1),W=s("p",null,"1）函数传参",-1),X=s("p",null,"2）generator.next 自动执行",-1),$=s("div",{class:"language-javascript"},[s("pre",null,[s("code",null,[s("span",{class:"token keyword"},"function"),a(),s("span",{class:"token function"},"co"),s("span",{class:"token punctuation"},"("),s("span",{class:"token parameter"},"gen"),s("span",{class:"token punctuation"},")"),a(),s("span",{class:"token punctuation"},"{"),a("\n  "),s("span",{class:"token comment"},"// 1. 传参"),a("\n  "),s("span",{class:"token keyword"},"var"),a(" ctx "),s("span",{class:"token operator"},"="),a(),s("span",{class:"token keyword"},"this"),s("span",{class:"token punctuation"},";"),a("\n  "),s("span",{class:"token keyword"},"const"),a(" args "),s("span",{class:"token operator"},"="),a(),s("span",{class:"token class-name"},"Array"),s("span",{class:"token punctuation"},"."),a("prototype"),s("span",{class:"token punctuation"},"."),s("span",{class:"token function"},"slice"),s("span",{class:"token punctuation"},"."),s("span",{class:"token function"},"call"),s("span",{class:"token punctuation"},"("),a("arguments"),s("span",{class:"token punctuation"},","),a(),s("span",{class:"token number"},"1"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},";"),a("\n  gen "),s("span",{class:"token operator"},"="),a(),s("span",{class:"token function"},"gen"),s("span",{class:"token punctuation"},"."),s("span",{class:"token function"},"apply"),s("span",{class:"token punctuation"},"("),a("ctx"),s("span",{class:"token punctuation"},","),a(" args"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},";"),a("\n  "),s("span",{class:"token keyword"},"return"),a(),s("span",{class:"token keyword"},"new"),a(),s("span",{class:"token class-name"},"Promise"),s("span",{class:"token punctuation"},"("),s("span",{class:"token keyword"},"function"),s("span",{class:"token punctuation"},"("),s("span",{class:"token parameter"},[a("resolve"),s("span",{class:"token punctuation"},","),a(" reject")]),s("span",{class:"token punctuation"},")"),a(),s("span",{class:"token punctuation"},"{"),a("\n    "),s("span",{class:"token comment"},"// 2. 自动执行 next"),a("\n    "),s("span",{class:"token function"},"onFulfilled"),s("span",{class:"token punctuation"},"("),s("span",{class:"token punctuation"},")"),a("\n    \n    "),s("span",{class:"token keyword"},"function"),a(),s("span",{class:"token function"},"onFulfilled"),a(),s("span",{class:"token punctuation"},"("),s("span",{class:"token parameter"},"res"),s("span",{class:"token punctuation"},")"),a(),s("span",{class:"token punctuation"},"{"),a("\n      "),s("span",{class:"token keyword"},"var"),a(" ret "),s("span",{class:"token operator"},"="),a(" gen"),s("span",{class:"token punctuation"},"."),s("span",{class:"token function"},"next"),s("span",{class:"token punctuation"},"("),a("res"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},";"),a("\n      "),s("span",{class:"token function"},"next"),s("span",{class:"token punctuation"},"("),a("ret"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},";"),a("\n    "),s("span",{class:"token punctuation"},"}"),a("\n    \n    "),s("span",{class:"token keyword"},"function"),a(),s("span",{class:"token function"},"next"),s("span",{class:"token punctuation"},"("),s("span",{class:"token parameter"},"ret"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},"{"),a("\n      "),s("span",{class:"token keyword"},"if"),a(),s("span",{class:"token punctuation"},"("),a("ret"),s("span",{class:"token punctuation"},"."),a("done"),s("span",{class:"token punctuation"},")"),a(),s("span",{class:"token keyword"},"return"),a(),s("span",{class:"token function"},"resolve"),s("span",{class:"token punctuation"},"("),a("ret"),s("span",{class:"token punctuation"},"."),a("value"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},";"),a("\n      "),s("span",{class:"token comment"},"// 此处只处理 ret.value 是 Promise 对象的情况，其他类型简略版没处理"),a("\n      "),s("span",{class:"token keyword"},"var"),a(" promise "),s("span",{class:"token operator"},"="),a(" ret"),s("span",{class:"token punctuation"},"."),a("value"),s("span",{class:"token punctuation"},";"),a("\n      "),s("span",{class:"token comment"},"// 自动执行"),a("\n      promise "),s("span",{class:"token operator"},"&&"),a(" promise"),s("span",{class:"token punctuation"},"."),s("span",{class:"token function"},"then"),s("span",{class:"token punctuation"},"("),a("onFulfilled"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},";"),a("\n    "),s("span",{class:"token punctuation"},"}"),a("\n  "),s("span",{class:"token punctuation"},"}"),s("span",{class:"token punctuation"},")"),a("\n"),s("span",{class:"token punctuation"},"}"),a("\n\n"),s("span",{class:"token comment"},"// 执行"),a("\n"),s("span",{class:"token function"},"co"),s("span",{class:"token punctuation"},"("),s("span",{class:"token keyword"},"function"),s("span",{class:"token operator"},"*"),a(),s("span",{class:"token function"},"getData"),s("span",{class:"token punctuation"},"("),s("span",{class:"token punctuation"},")"),a(),s("span",{class:"token punctuation"},"{"),a("\n  "),s("span",{class:"token keyword"},"var"),a(" result "),s("span",{class:"token operator"},"="),a(),s("span",{class:"token keyword"},"yield"),a(),s("span",{class:"token function"},"request"),s("span",{class:"token punctuation"},"("),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},";"),a("\n  "),s("span",{class:"token comment"},'// 1s后打印 {data: "request"}'),a("\n  console"),s("span",{class:"token punctuation"},"."),s("span",{class:"token function"},"log"),s("span",{class:"token punctuation"},"("),a("result"),s("span",{class:"token punctuation"},")"),a("\n"),s("span",{class:"token punctuation"},"}"),s("span",{class:"token punctuation"},")"),a("\n")])])],-1),nn=s("h2",{id:"_6-感想"},[s("a",{class:"header-anchor",href:"#_6-感想","aria-hidden":"true"},"#"),a(" 6. 感想")],-1),sn=s("p",null,"对我来说，学习一个新的东西（generator）花费的时间远远大于单纯阅读源码的时间，因为需要了解它产生的背景，语法，解决的问题以及一些应用场景，这样在阅读源码的时候才知道它为什么要这样写。",-1),an=s("p",null,"读完源码，我们会发现，其实 co 就是一个自动执行 next() 的函数，而且到最后我们会发现 co 的写法和我们日常使用的 async/await 的写法非常相像，因此也不难理解【async/await 实际上是对 generator 封装的一个语法糖】这句话了。",-1),tn=s("div",{class:"language-javascript"},[s("pre",null,[s("code",null,[s("span",{class:"token comment"},"// co 写法"),a("\n"),s("span",{class:"token function"},"co"),s("span",{class:"token punctuation"},"("),s("span",{class:"token keyword"},"function"),s("span",{class:"token operator"},"*"),a(),s("span",{class:"token function"},"getData"),s("span",{class:"token punctuation"},"("),s("span",{class:"token punctuation"},")"),a(),s("span",{class:"token punctuation"},"{"),a("\n  "),s("span",{class:"token keyword"},"var"),a(" result "),s("span",{class:"token operator"},"="),a(),s("span",{class:"token keyword"},"yield"),a(),s("span",{class:"token function"},"request"),s("span",{class:"token punctuation"},"("),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},";"),a("\n  "),s("span",{class:"token comment"},'// 1s后打印 {data: "request"}'),a("\n  console"),s("span",{class:"token punctuation"},"."),s("span",{class:"token function"},"log"),s("span",{class:"token punctuation"},"("),a("result"),s("span",{class:"token punctuation"},")"),a("\n"),s("span",{class:"token punctuation"},"}"),s("span",{class:"token punctuation"},")"),a("\n"),s("span",{class:"token comment"},"// async await 写法"),a("\n"),s("span",{class:"token punctuation"},"("),s("span",{class:"token keyword"},"async"),a(),s("span",{class:"token keyword"},"function"),a(),s("span",{class:"token function"},"getData"),s("span",{class:"token punctuation"},"("),s("span",{class:"token punctuation"},")"),a(),s("span",{class:"token punctuation"},"{"),a("\n  "),s("span",{class:"token keyword"},"var"),a(" result "),s("span",{class:"token operator"},"="),a(),s("span",{class:"token keyword"},"await"),a(),s("span",{class:"token function"},"request"),s("span",{class:"token punctuation"},"("),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},";"),a("\n  "),s("span",{class:"token comment"},'// 1s后打印 {data: "request"}'),a("\n  console"),s("span",{class:"token punctuation"},"."),s("span",{class:"token function"},"log"),s("span",{class:"token punctuation"},"("),a("result"),s("span",{class:"token punctuation"},")"),a("\n"),s("span",{class:"token punctuation"},"}"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},"("),s("span",{class:"token punctuation"},")"),a("\n")])])],-1),on=s("p",null,"不得不说，阅读源码的确是一个开阔视野的好方法，如果不是这次活动，我可能还要晚个大半年才接触到 generator，接触协程的概念，了解到 async/await 实现的原理，希望能够继续坚持下去~",-1);c.render=function(a,e,c,en,cn,pn){const un=o("Comment");return t(),n("div",null,[p,u,l,k,i,r,d,f,m,y,w,g,h,v,j,b,P,_,x,q,D,R,F,E,T,z,A,G,S,C,J,M,H,O,U,Y,Z,B,I,K,L,N,Q,V,W,X,$,nn,sn,an,tn,on,s(un)])};export default c;export{e as __pageData};
